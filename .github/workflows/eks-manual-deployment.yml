name: Manual Deploy to EKS

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose the environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - qa
          - prd
      image_source:
        description: 'Choose the image source (Docker Hub or ECR)'
        required: true
        default: 'dockerhub'
        type: choice
        options:
          - dockerhub
          - ecr

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout config repository for values.yaml
        uses: actions/checkout@v3
        with:
          repository: non-prod-config  # Default repo for dev and qa
          token: ${{ secrets.GITHUB_TOKEN }}
          path: config
        if: ${{ github.event.inputs.environment != 'prd' }}

      - name: Checkout prd-config repository for values.yaml
        uses: actions/checkout@v3
        with:
          repository: prd-config  # Repo for prd environment
          token: ${{ secrets.GITHUB_TOKEN }}
          path: config
        if: ${{ github.event.inputs.environment == 'prd' }}

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Log in to Docker Hub (if Docker Hub is selected)
        if: ${{ github.event.inputs.image_source == 'dockerhub' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Get latest image tag from Docker Hub
        if: ${{ github.event.inputs.image_source == 'dockerhub' }}
        id: get_latest_tag_dockerhub
        run: |
          IMAGE_TAG=$(curl -s -u ${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_TOKEN }} \
          "https://hub.docker.com/v2/repositories/raphaeleze/recipex/tags" | \
          jq -r '.results | sort_by(.last_updated) | last(.[]).name')
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Get latest image tag from ECR (if ECR is selected)
        if: ${{ github.event.inputs.image_source == 'ecr' }}
        id: get_latest_tag_ecr
        run: |
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com
          IMAGE_TAG=$(aws ecr describe-images --repository-name recipex --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]' --output text)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Decode kubeconfig and set up kubectl
        env:
          KUBECONFIG_B64: ${{ secrets.EKS_KUBECONFIG }}
        run: |
          echo "$KUBECONFIG_B64" | base64 --decode > $HOME/.kube/config

      - name: Set environment-specific deployment YAML with image tag
        run: |
          ENVIRONMENT="${{ github.event.inputs.environment }}"
          IMAGE_TAG="${{ env.IMAGE_TAG }}"
          IMAGE_REPO=$([[ ${{ github.event.inputs.image_source }} == 'dockerhub' ]] && echo 'raphaeleze/recipex' || echo "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com/recipex")
          echo "Deploying to environment: $ENVIRONMENT with image: $IMAGE_REPO:$IMAGE_TAG"
          envsubst < config/$ENVIRONMENT/recipex-values.yaml > k8s/deployment.yaml

      - name: Deploy updated Helm chart to EKS
        run: |
          helm upgrade --install recipex spring-boot-helm -f k8s/deployment.yaml -n microservices